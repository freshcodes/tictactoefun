{"version":3,"sources":["webpack:///./components/player_choice.js","webpack:///./components/mode_choice.js","webpack:///./routes/home.js"],"names":["PlayerChoice","handleChange","event","props","setLastPlayerChoice","parseInt","target","value","render","lastPlayerChoice","options","Object","entries","playerNamesMap","map","name","key","selected","class","onchange","this","Component","connect","actions","ModeChoice","setLastModeChoice","lastModeChoice","modeNamesMap","Home","startLocalGame","player","mode","playerForUrl","toLowerCase","modeForUrl","clearGameStateFromParams","route","startRemoteGame","componentDidMount","currentPath","window","location","pathname","lastPath","lastUri","onclick","href"],"mappings":"sJAKMA,E,oJACJC,aAAe,SAACC,GACd,EAAKC,MAAMC,oBAAoBC,SAASH,EAAMI,OAAOC,MAAO,M,oHAG9DC,OAAA,YAA8B,IAApBC,EAAoB,EAApBA,iBACFC,EAAUC,OAAOC,QAAQC,KAAgBC,KAAI,YAAmB,IAAjBP,EAAiB,KAAVQ,EAAU,KAEpE,OADAR,EAAQF,SAASE,EAAO,IAChB,sBAAQS,IAAKT,EAAOA,MAAOA,EAAOU,SAAUR,IAAqBF,GAAQQ,MAGnF,OACE,mBAAKG,MAAM,iBACT,yBACE,oCACA,sBAAQH,KAAK,SAASI,SAAUC,KAAKnB,cAClCS,M,GAhBcW,aAwBZC,oBAAQ,mBAAoBC,IAA5BD,CAAqCtB,GCxB9CwB,E,oJACJvB,aAAe,SAACC,GACd,EAAKC,MAAMsB,kBAAkBpB,SAASH,EAAMI,OAAOC,MAAO,M,oHAG5DC,OAAA,YAA4B,IAAlBkB,EAAkB,EAAlBA,eACFhB,EAAUC,OAAOC,QAAQe,KAAcb,KAAI,YAAmB,IAAjBP,EAAiB,KAAVQ,EAAU,KAElE,OADAR,EAAQF,SAASE,EAAO,IAChB,sBAAQS,IAAKT,EAAOA,MAAOA,EAAOU,SAAUS,IAAmBnB,GAAQQ,MAGjF,OACE,mBAAKG,MAAM,eACT,yBACE,gDACA,sBAAQH,KAAK,OAAOI,SAAUC,KAAKnB,cAChCS,M,GAhBYW,aAwBVC,oBAAQ,iBAAkBC,IAA1BD,CAAmCE,G,4CCrB7BI,E,oJASnBC,eAAiB,WACf,IAAMC,EAAS,EAAK3B,MAAMM,iBACpBsB,EAAO,EAAK5B,MAAMuB,eAElBM,EAAenB,IAAeiB,GAAQG,cACtCC,EAAaP,IAAaI,GAAME,cAEtC,EAAK9B,MAAMgC,yBAAyBL,EAAQC,GAE5CK,YAAM,UAAUJ,EAAX,IAA2BE,I,EAGlCG,gBAAkB,WAChBD,YAAM,U,4HArBRE,kBAAA,WACE,IAAMC,EAAcC,OAAOC,SAASC,SAC9BC,EAAWvB,KAAKjB,MAAMyC,QACxBD,GAAYA,IAAaJ,GAC3BH,YAAMO,I,EAoBVnC,OAAA,WACE,OACE,wBACE,mBAAKU,MAAM,2BACT,mDACA,YAAC,EAAD,MACA,YAAC,EAAD,MACA,qBAAG,sBAAQ2B,QAASzB,KAAKS,gBAAtB,UAEL,mBAAKX,MAAM,4BACT,4DACA,qBAAG,sBAAQ2B,QAASzB,KAAKiB,iBAAtB,uBAEL,uCAAkB,iBAAGS,KAAK,UAAR,SAAlB,O,GAtC0BzB","file":"route-home.chunk.17415.js","sourcesContent":["import { h, Component } from 'preact'\nimport { connect } from 'unistore/preact'\n\nimport { playerNamesMap, actions } from '../store'\n\nclass PlayerChoice extends Component {\n  handleChange = (event) => {\n    this.props.setLastPlayerChoice(parseInt(event.target.value, 10))\n  }\n\n  render ({ lastPlayerChoice }) {\n    const options = Object.entries(playerNamesMap).map(([value, name]) => {\n      value = parseInt(value, 10)\n      return (<option key={value} value={value} selected={lastPlayerChoice === value}>{name}</option>)\n    })\n\n    return (\n      <div class='player-choice'>\n        <label>\n          <span>Play as:</span>\n          <select name='player' onchange={this.handleChange}>\n            {options}\n          </select>\n        </label>\n      </div>\n    )\n  }\n}\n\nexport default connect('lastPlayerChoice', actions)(PlayerChoice)\n","import { h, Component } from 'preact'\nimport { connect } from 'unistore/preact'\n\nimport { modeNamesMap, actions } from '../store'\n\nclass ModeChoice extends Component {\n  handleChange = (event) => {\n    this.props.setLastModeChoice(parseInt(event.target.value, 10))\n  }\n\n  render ({ lastModeChoice }) {\n    const options = Object.entries(modeNamesMap).map(([value, name]) => {\n      value = parseInt(value, 10)\n      return (<option key={value} value={value} selected={lastModeChoice === value}>{name}</option>)\n    })\n\n    return (\n      <div class='mode-choice'>\n        <label>\n          <span>Computer difficulty:</span>\n          <select name='mode' onchange={this.handleChange}>\n            {options}\n          </select>\n        </label>\n      </div>\n    )\n  }\n}\n\nexport default connect('lastModeChoice', actions)(ModeChoice)\n","import { h, Component } from 'preact'\nimport { route } from 'preact-router'\n\nimport { playerNamesMap, modeNamesMap } from '../store'\n\nimport PlayerChoice from '../components/player_choice'\nimport ModeChoice from '../components/mode_choice'\n\nexport default class Home extends Component {\n  componentDidMount () {\n    const currentPath = window.location.pathname\n    const lastPath = this.props.lastUri\n    if (lastPath && lastPath !== currentPath) {\n      route(lastPath)\n    }\n  }\n\n  startLocalGame = (event) => {\n    const player = this.props.lastPlayerChoice\n    const mode = this.props.lastModeChoice\n\n    const playerForUrl = playerNamesMap[player].toLowerCase()\n    const modeForUrl = modeNamesMap[mode].toLowerCase()\n\n    this.props.clearGameStateFromParams(player, mode)\n\n    route(`/local/${playerForUrl}/${modeForUrl}`)\n  }\n\n  startRemoteGame = (event) => {\n    route('/host')\n  }\n\n  render () {\n    return (\n      <main>\n        <div class='title-screen-local-game'>\n          <p>Play against the computer.</p>\n          <PlayerChoice />\n          <ModeChoice />\n          <p><button onclick={this.startLocalGame}>Play</button></p>\n        </div>\n        <div class='title-screen-remote-game'>\n          <p>You can also play against a friend.</p>\n          <p><button onclick={this.startRemoteGame}>Start Remote Game</button></p>\n        </div>\n        <p>Check out your <a href='/stats'>stats</a>.</p>\n      </main>\n    )\n  }\n}\n"],"sourceRoot":""}